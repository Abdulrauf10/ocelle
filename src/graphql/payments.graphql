fragment PaymentGateway on PaymentGateway {
  id
  name
  currencies
  config {
    field
    value
  }
}

fragment TransactionEvent on TransactionEvent {
  id
  type
  pspReference
  createdAt
  message
  externalUrl
  amount {
    ...Money
  }
}

fragment TransactionItem on TransactionItem {
  id
  actions
  name
  message
  pspReference
  events {
    ...TransactionEvent
  }
}

mutation InitializePaymentGateways(
  $checkoutId: ID!
  $paymentGateways: [PaymentGatewayToInitialize!]
) {
  paymentGatewayInitialize(id: $checkoutId, paymentGateways: $paymentGateways) {
    errors {
      field
      message
      code
    }
    gatewayConfigs {
      id
      data
      errors {
        field
        message
        code
      }
    }
  }
}

mutation InitializeTransaction(
  $checkoutOrOrderId: ID!
  $action: TransactionFlowStrategyEnum
  $paymentGateway: PaymentGatewayToInitialize!
  $amount: PositiveDecimal
) {
  transactionInitialize(
    id: $checkoutOrOrderId
    action: $action
    paymentGateway: $paymentGateway
    amount: $amount
  ) {
    transaction {
      ...TransactionItem
    }
    transactionEvent {
      ...TransactionEvent
    }
    data
    errors {
      field
      code
      message
    }
  }
}

mutation ProcessTransaction($id: ID!, $data: JSON) {
  transactionProcess(id: $id, data: $data) {
    transaction {
      ...TransactionItem
    }
    transactionEvent {
      ...TransactionEvent
    }
    data
    errors {
      field
      code
      message
    }
  }
}

mutation RequestTransactionAction($id: ID!, $actionType: TransactionActionEnum!) {
  transactionRequestAction(id: $id, actionType: $actionType) {
    transaction {
      ...TransactionItem
    }
    errors {
      field
      code
      message
    }
  }
}
